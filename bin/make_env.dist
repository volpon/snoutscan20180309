#!/usr/bin/make
#This file contains any variables for the Makefile that might be different from machine to machine.
#(I don't actually execute it.  The #! is just so Kate does the right syntax highlighting)

#Namespace
NS ?= ss

#What version of the container to be working on:
VERSION ?= latest

IMAGE_NAME ?= snoutscanbackend
CONTAINER_NAME ?= snoutscanbackend
CONTAINER_INSTANCE ?= default

CONTAINER_PORT ?= 8080
HOST_PORT ?= 8080

#This forwards the CONTAINER_PORT so it's accessible at HOST_PORT
PORTS ?= -p $(HOST_PORT):$(CONTAINER_PORT)

#--net=host  is what allows the docker container to access mysql on my local box.  
# It won't be used in production.
#This adds a persistent /persist directory:
ENV ?= --net=host --volume='persist:/persist:rw' --env=SQLALCHEMY_DATABASE_URI=mysql+pymysql://andromodon:worivrinVosk@127.0.0.1/snoutScan

#What command to run with the 'make run' command:
RUN_CMD ?= gunicorn main:app -b :$(CONTAINER_PORT)

#Alternatively you could use this command to add ssl:
#RUN_CMD ?= gunicorn main:app -D -b :443 --certfile=ssl_cert/cert.crt --keyfile=ssl_cert/cert.key

#What data directory to run the benchmark on
BENCHMKAR_DATA ?= ./data/0med

#What command to use for 'make benchmark'
BENCHMARK_CMD ?= python3 ./cli/snoutScan.py $(BENCHMKAR_DATA)

#The pdb version:
BENCHMARK_PDB_CMD ?= python3 -m pdb ./cli/snoutScan.py $(BENCHMKAR_DATA)

#Some special flags that allow us to connect to the host's x-server from inside the container:
#BENCHMARK_ENV ?= --env="DISPLAY" --env="QT_X11_NO_MITSHM=1" --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" 
